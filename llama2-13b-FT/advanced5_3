module abro( input clk, input reset,input a, input b, output z );
parameter IDLE = 0,
SA = 1,
SB = 2,
SAB = 3;
reg [1:0] cur_state,next_state;


always @(posedge clk) begin
	if (reset)
		cur_state <= IDLE;
	else
		cur_state <= next_state;
end

always_comb begin
	case (cur_state)
		IDLE: next_state = a ? SA : b ? SB : IDLE;
		SA: next_state = b ? SAB : IDLE;
		SB: next_state = a ? SAB : IDLE;
		SAB: next_state = IDLE;
		default: next_state = 'x;
	endcase
end

assign z = (cur_state == SAB);



endmodule