// This is a shift left and rotate operation
module left_rotate(input clk,input reset,input [2:0] amount,input [7:0] data,input load,output reg [7:0] out);
// when load is high, load data to out
// shift left and rotate the register out by amount bits
always @(posedge clk or posedge reset)
begin
if(reset) out<=8'b0;
else if(load) out<=data;
else if(amount==3'b000) out<=data;
else if(amount==3'b001) out<=data<<1;
else if(amount==3'b010) out<=data<<2;
else if(amount==3'b011) out<=data<<3;
else if(amount==3'b100) out<=data<<4;
else if(amount==3'b101) out<=data<<5;
else if(amount==3'b110) out<=data<<6;
else out<=data<<7;
end
endmodule
