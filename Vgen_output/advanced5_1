// This is an ABRO FSM. 
// It outputs 1 when 1 is received for signals a and b irrespetive of their order, either simultaneously or non-simultaneously.
module abro( 
input clk,
input reset,
input  a,
input  b,
output z );
parameter IDLE = 0,
SA = 1,
SB = 2,
SAB = 3;
reg [1:0] cur_state,next_state; 
always @ (posedge clk or posedge reset) begin
if (reset) begin
cur_state <= IDLE;
end
else begin
cur_state <= next_state;
end
end
always @ (cur_state or a or b) begin
next_state <= IDLE;
case (cur_state)
IDLE: begin
if (a==1 and b==1) begin
next_state <= SAB;
end
else if (a==1) begin
next_state <= SA;
end
else if (b==1) begin
next_state <= SB;
end
end
SA: begin
if (a==1 and b==1) begin
next_state <= SAB;
end
else begin
next_state <= SA;
end
end
SB: begin
if (a==1 and b==1) begin
next_state <= SAB;
end
else begin
next_state <= SB;
end
end
SAB: begin
next_state <= SAB;
end
endcase
end
always @ (cur_state) begin
case (cur_state)
IDLE: begin
z <= 0;
end
SA: begin
z <= 0;
end
SB: begin
z <= 