// This is an ABRO FSM. 
// It outputs 1 when 1 is received for signals a and b irrespetive of their order, either simultaneously or non-simultaneously.
module abro( 
input clk,
input reset,
input  a,
input  b,
output z );
parameter IDLE = 0,
SA = 1,
SB = 2,
SAB = 3;
reg [1:0] cur_state,next_state; 
always @(posedge clk) begin
	if (reset) begin
		cur_state <= IDLE;
	end else begin
		cur_state <= next_state;
	end
end
always @(cur_state or a or b) begin
	case (cur_state)
		IDLE: begin
			if (a && b) begin
				next_state <= SA;
			end else begin
				next_state <= IDLE;
			end
		end
		SA: begin
			if (b) begin
				next_state <= SAB;
			end else begin
				next_state <= SA;
			end
		end
		SB: begin
			if (a) begin
				next_state <= SAB;
			end else begin
				next_state <= SB;
			end
		end
		SAB: begin
			if (a && b) begin
				next_state <= SAB;
			end else begin
				next_state <= IDLE;
			end
		end
	endcase
end
always @(next_state) begin
	case (next_state)
		IDLE: begin
			z <= 0;
		end
		SA: begin
			z <= 0;
		end
		SB