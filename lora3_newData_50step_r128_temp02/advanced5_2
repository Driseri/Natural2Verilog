// This is an ABRO FSM. 
// It outputs 1 when 1 is received for signals a and b irrespetive of their order, either simultaneously or non-simultaneously.
module abro( 
input clk,
input reset,
input  a,
input  b,
output z );
parameter IDLE = 0,
SA = 1,
SB = 2,
SAB = 3;
reg [1:0] cur_state,next_state;
// The output z is high when 1 is received for signals a and b in any order. 
// The output z is high when the FSM is in state SAB. 
// The output z is high when the FSM is in state SA and input a is high. 
// The output z is high when the FSM is in state SB and input b is high. 
// The output z is low otherwise.
assign z = (cur_state==SAB) || (cur_state==SA && a) || (cur_state==SB && b);

// The FSM changes state when the input clk is high. 
// The FSM state changes to next_state when the current state is cur_state and the next state is next_state.
// The FSM state changes to next_state when the current state is cur_state and the next state is next_state.
// The FSM state changes to next_state when the current state is cur_state and the next state is next_state.
// The FSM state changes to next_state when the current state is cur_state and the next state is next_state.
// The FSM state changes to next_state when the current state is cur_state and the next state is next_state.
// The FSM state changes to next_state when the current state is cur_state and the next state is next_state.
// The FSM state changes to next_state when the current state