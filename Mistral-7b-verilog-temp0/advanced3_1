module adv_fsm(
input clk,
input reset,
input x,
output z ); 
reg [1:0] present_state, next_state;
parameter IDLE=0, S1=1, S10=2, S101=3;
always @(posedge clk or negedge reset) begin
if (reset) begin
present_state <= IDLE;
next_state <= IDLE;
end
else begin
case (present_state)
IDLE: begin
if (x) next_state <= S1;
else next_state <= IDLE;
end
S1: begin
if (x) next_state <= S10;
else next_state <= IDLE;
end
S10: begin
if (x) next_state <= S101;
else next_state <= IDLE;
end
S101: begin
next_state <= IDLE;
z <= 1;
end
endcase
end
end
endmodule