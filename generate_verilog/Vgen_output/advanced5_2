// This is an ABRO FSM. 
// It outputs 1 when 1 is received for signals a and b irrespetive of their order, either simultaneously or non-simultaneously.
module abro( 
input clk,
input reset,
input  a,
input  b,
output z );
parameter IDLE = 0,
SA = 1,
SB = 2,
SAB = 3;
reg [1:0] cur_state,next_state;
// The output z is high when 1 is received for signals a and b in any order. 
// If a 1 is received for a signal and a 0 is received for the other signal, z is low. 
// If a 0 is received for both signals, z is low. 
// If a 1 is received for both signals, z is high. 
always @(a,b) begin
	if (a == 1'b1 && b == 1'b1) begin
		cur_state <= SAB;
	end
	else if (a == 1'b1 && b == 1'b0) begin
		cur_state <= SA;
	end
	else if (a == 1'b0 && b == 1'b1) begin
		cur_state <= SB;
	end
	else begin
		cur_state <= IDLE;
	end
end
always @(posedge clk) begin
	if (reset == 1'b1) begin
		cur_state <= IDLE;
	end
	else begin
		next_state <= cur_state;
	end
end
always @(cur_state) begin
	case (cur_state)
		IDLE: begin
			if (a == 1'b1 && b == 1'b1) begin
				next_state <= SAB;
			end
			else if (a ==